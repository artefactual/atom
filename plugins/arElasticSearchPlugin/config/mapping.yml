# Mapping types
# http://www.elasticsearch.org/guide/reference/mapping/
mapping:

  # Special attributes (_attributes):
  # - i18n: the i18n fields will be added automatically (it is optional)
  # - i18nExtra: to inherit i18n fields from other table
  # - autocompleteFields: a list of fields that will be analyzed with edgengram
  # - timestamp: adds created_at and updated_at properties
  #Â - nested_only: the type will be ignored but embedded within other objects

  # Other notes:
  # - Field names are camelized
  # - Objects can be embedded using _foreign_types
  # - The other matters, embedded types must be defined first

  #
  # Nested only (they are not considered types)
  #

  contact_information:
    _attributes: { i18n: true, i18nExtra: actor, timestamp: true, nested_only: true }
    dynamic: strict
    properties:
      contact_person: { type: string, index: not_analyzed }
      street_address: { type: string, index: no }
      postal_code: { type: string, include_in_all: false }
      country_code: { type: string, index: not_analyzed, include_in_all: false }
      location: { type: geo_point }

  other_name:
    _attributes:
      i18n: true
      nested_only: true
    dynamic: strict

  note:
    _attributes:
      i18n: true
      nested_only: true
    dynamic: strict

  event:
    _attributes:
      i18n: true
      nested_only: true
    dynamic: strict
    properties:
      start_date: { type: date, include_in_all: false }
      end_date: { type: date, include_in_all: false }
      start_date_string: { type: string, index: not_analyzed }
      end_date_string: { type: string, index: not_analyzed }
      type_id: { type: integer, index: not_analyzed, include_in_all: false }
      actor_id: { type: integer, index: not_analyzed, include_in_all: false }

  donor:
    _attributes:
      i18nExtra: actor
      nested_only: true
    _foreign_types: { contact_informations: contact_information }
    dynamic: true
    properties:
      slug: { type: string, index: not_analyzed }

  #
  # Main types
  #

  term:
    _attributes:
      i18n: true
      timestamp: true
      autocompleteFields: [name]
    _foreign_types: { use_for: other_name, scope_notes: note }
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      taxonomy_id: { type: integer, index: not_analyzed, include_in_all: false }
      is_protected: { type: boolean, index: not_analyzed, include_in_all: false }
      number_of_descendants: { type: integer, index: not_analyzed, include_in_all: false }

  accession:
    _attributes: { i18n: true, timestamp: true }
    _foreign_types: { donors: donor, creators: actor }
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      identifier: { type: string, index: not_analyzed }

  actor:
    _attributes:
      i18n: true
      timestamp: true
      autocompleteFields: [authorizedFormOfName]
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      description_identifier: { type:string, index: not_analyzed}
      entity_type_id: { type: integer, index: not_analyzed, include_in_all: false }

  repository:
    _attributes:
      i18n: true
      i18nExtra: actor
      timestamp: true
      autocompleteFields: [authorizedFormOfName]
    _foreign_types:
      contact_informations: contact_information
      other_names: other_name
      parallel_names: other_name
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      identifier: { type: string, index: not_analyzed }
      types: { type: integer, index: not_analyzed, include_in_all: false }

  information_object:
    _attributes:
      i18n: true
      timestamp: true
      autocompleteFields: [title]
    _foreign_types:
      repository: repository
      names: actor
      creators: actor
      subjects: term
      places: term
      dates: event
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      identifier: { type: string, index: not_analyzed }
      level_of_description_id: { type: integer, index: not_analyzed }
      publication_status_id: { type: integer, index: not_analyzed }
      parent_id: { type: integer, index: not_analyzed, include_in_all: false }
      ancestors: { type: integer, index: not_analyzed, include_in_all: false }
      children: { type: integer, index: not_analyzed, include_in_all: false }
      copyright_status_id: { type: integer, index: not_analyzed, include_in_all: false }
      material_type_id: { type: integer, index: not_analyzed, include_in_all: false }
      transcript: { type: string, index: analyzed, include_in_all: true }
      direct_subjects: { type: integer, index: not_analyzed, include_in_all: false }
      direct_places: { type: integer, index: not_analyzed, include_in_all: false }
      has_digital_object: { type: boolean, index: not_analyzed, include_in_all: false }
      digital_object:
        type: object
        properties:
          media_type_id: { type: integer, index: not_analyzed, include_in_all: false }
          usage_id: { type: integer, index: not_analyzed, include_in_all: false }
          thumbnail_path: { type: string, index: not_analyzed }
      alternative_identifiers:
        type: object
        properties:
          label: { type: string, index: not_analyzed }
          identifier: { type: string, index: not_analyzed }
      inherit_reference_code:
        type: multi_field
        fields:
          inheritReferenceCode:
            type: string
            index: not_analyzed
          autocomplete:
            include_in_all: false
            index_analyzer: autocomplete
            store: true
            search_analyzer: standard
            term_vector: with_positions_offsets
            type: string
